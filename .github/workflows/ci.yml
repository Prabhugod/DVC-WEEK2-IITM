name: CI Pipeline

on:
  push:
    branches:
      - dev
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.10.8

      # Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r .github/workflows/requirements.txt

      # Pull DVC tracked data
      - name: Set up GCP credentials and authenticate
        env:
          GCP_B64: ${{ secrets.GCS_KEY }}
        run: |
          set -e
          echo "$GCP_B64" | base64 -d > gcp-key.json
          echo "GOOGLE_APPLICATION_CREDENTIALS=$(pwd)/gcp-key.json" >> $GITHUB_ENV
          export GOOGLE_APPLICATION_CREDENTIALS=$(pwd)/gcp-key.json
          
          echo "✓ Decoded service account key"
          python3 -m json.tool gcp-key.json > /dev/null && echo "✓ Valid JSON"
          
          echo "Installing Google Cloud CLI..."
          sudo apt-get update && sudo apt-get install -y google-cloud-cli
          
          echo "Authenticating with GCP..."
          gcloud auth activate-service-account --key-file=gcp-key.json
          gcloud config set project geometric-gamma-472903-q2
          
          echo "Running DVC pull in same session..."
          source .venv/bin/activate
          
          export GOOGLE_APPLICATION_CREDENTIALS=$(pwd)/gcp-key.json
          
          echo "Configuring DVC to use gcloud credentials..."
          dvc remote modify gcsremote credentialpath $(pwd)/gcp-key.json
          
          echo "Running DVC pull:"
          dvc pull -v

      # Run evaluation/tests
      - name: Run evaluation/tests
        run: pytest week-4/tests/ -v --junitxml=report.xml

      # Post results as PR comment using CML
      - name: Post results as PR comment
        env:
          REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cml-send-comment report.xml || echo "No report generated"
